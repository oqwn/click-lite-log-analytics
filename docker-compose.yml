version: '3.8'

services:
  # ClickHouse Database
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: click-lite-clickhouse
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native protocol
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse/config:/etc/clickhouse-server/config.d
    environment:
      CLICKHOUSE_DB: click_lite
      CLICKHOUSE_USER: click_lite
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-clicklite123}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - click-lite

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: click-lite-backend
    ports:
      - "8080:8080"  # API port
      - "5514:5514"  # TCP log receiver
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_DATABASE=click_lite
      - CLICKHOUSE_USER=click_lite
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-clicklite123}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      clickhouse:
        condition: service_healthy
    volumes:
      - ./backend/config:/app/config:ro
    networks:
      - click-lite
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: click-lite-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8080}
      - REACT_APP_WS_URL=${REACT_APP_WS_URL:-ws://localhost:8080}
    depends_on:
      - backend
    networks:
      - click-lite
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: click-lite-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - click-lite
    restart: unless-stopped

  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: click-lite-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - click-lite
    restart: unless-stopped

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: click-lite-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - click-lite
    restart: unless-stopped

networks:
  click-lite:
    driver: bridge

volumes:
  clickhouse_data:
  redis_data:
  prometheus_data:
  grafana_data: